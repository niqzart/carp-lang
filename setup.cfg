[coverage:report]
show_missing = true
skip_covered = true
fail_under = 100

exclude_lines =
  pragma: no cover
  except ImportError
  raise AssertionError
  raise NotImplementedError
  if (not)? (current_)?app.debug:
  if __name__ == .__main__.:
  class .*\(Protocol\):
  @abstractmethod
  @mark.skip

[flake8]
max-line-length = 88

max-arguments = 10
max-decorators = 7
max-local-variables = 10
max-methods = 15
max-module-members = 10
max-name-length = 30
max-returns = 10
max-try-body-length = 10

show-violation-links = True

extend-ignore =
# Style & Naming  TODO mb reconsider
  E501  # line too long
  WPS101 WPS110 WPS111 WPS120 WPS121 WPS122 WPS123  # bad naming conventions
  WPS115  # "upper-case constant in a class"  # classes are upper-case because PEP8
  U101  # arguments starting with _ can be unused
  VNE001  # single letter variables (in comprehensions they are a thing)
  FNE005  # return type of the function is bool, but the name doesn't show it
  FNE007  # "and" can be used in functions names
  FNE008  # function name sometimes will end with it's first argument
  I  # doesn't work properly

# Do NOT disable features
  WPS609  # magic methods are callable
  WPS100 WPS420  # pass is a thing
  WPS140 WPS141 WPS430 WPS431  # nested functions & classes are a thing
  WPS305 WPS306  # python 2 is EOL, f-strings are the best
  WPS336  # explicit string concatenation is okay
  WPS348  # lines starting with dots are a thing
  WPS412  # logic in __init__ is a thing
  WPS433  # nested imports are a thing
  WPS451  # positional only arguments are a thing
  WPS600  # string enums work via subclassing a builtin
  WPS602  # @staticmetod is a thing
  WPS604  # logic in classes is fine
  TYP001  # support only 3.9, no looking back

# False positives
  C # trailing comma triggered by generators
  Q # quotes, but literal is better because settings
  NQA102  # no active violations seem to be detected
  WPS441  # control variable used after block triggered by generators
  WPS507  # useless len compare triggered by len(array) == 0
  ANN101  # annotating self

# Weird rules
  WPS213 FNE003
  WPS317  # enforces weird indents
  WPS338  # ordering is not linting (same as flake8-class-attributes-order)
  WPS440  # block variables overlap is weird

# Other
  D1 D2 D4 RST304 DAR  # docs
  S311  # shadowed by DUO102
  FI10 FI11 FI12 FI13 FI14 FI15 FI16 FI17 FI18  # future imports for 3.9
  WPS407  # mutable module-level vars are not ideal, but MappingProxyType is worse

  PL123 SCS109  # Path.open instead of open
  TC002 TC003  # type-checking block
  ECE001  # expression is too complex
  WPS231  # too much cognitive complexity
  E203  # black
  S404 S603 S607

# TODO: Pretty (run every now and again)
  WPS201 WPS235  # many imports
  WPS226 WPS230 TAE002  # literal overuse
  WPS432  # magic number triggered by http codes & pytest.order & the lister
  TAE001 WPS234  # too few type annotations


per-file-ignores =
  *__main__.py: FA100 B008 WPS404 WPS425 NU002 WPS421 T201
  *test*: ANN001 ANN201 S101 SCS108 WPS118 WPS202 WPS204 WPS210 WPS213 WPS218 WPS221 WPS230 WPS425 WPS442 WPS509 WPS518

unused-arguments-ignore-abstract-functions = True
unused-arguments-ignore-overload-functions = True
unused-arguments-ignore-stub-functions = True

test-func-name-validator-regex = test_.*

literal-inline-quotes = double
literal-multiline-quotes = double
literal-docstring-quotes = double
literal-include-name = True
